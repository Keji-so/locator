{"version":3,"sources":["App.js","styles.js","reportWebVitals.js","index.js"],"names":["google","window","libraries","mapContainerStyle","width","height","options","styles","disableDefaultUI","zoomControl","label","text","App","useLoadScript","googleMapsApiKey","isLoaded","loadError","mapRef","React","useRef","onMapLoad","useCallback","map","current","panTo","lat","lng","setZoom","useState","address","setAddress","newLocation","setLocation","actualAddress","setactualAddress","mapPosition","markerPosition","positionState","setPositionState","markers","setMarkers","infoWind","setInfoWind","myAddress","setMyAddress","directions","setDirections","handleSelect","value","a","geocodeByAddress","results","getLatLng","latLng","formatted_address","searchOptions","location","maps","LatLng","radius","origin","destination","Positions","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","console","error","className","size","onClick","Geocode","fromLatLng","then","response","DirectionsService","route","travelMode","TravelMode","DRIVING","waypoints","result","status","DirectionsStatus","OK","onChange","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","suggestion","style","backgroundColor","active","description","zoom","center","onLoad","onCloseClick","setApiKey","enableDebug","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7991c590.chunk.js","sourcesContent":["import React, {useState } from 'react'\nimport './App.css';\nimport { SiEverplaces } from \"react-icons/si\";\nimport { BiSelectMultiple } from \"react-icons/bi\";\nimport { FaLocationArrow } from \"react-icons/fa\";\nimport { BsBoxArrowUpRight } from \"react-icons/bs\";\nimport { BiCommentDetail } from \"react-icons/bi\";\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from 'react-places-autocomplete';\n\nimport { GoogleMap, useLoadScript, Marker, InfoWindow, DirectionsRenderer } from '@react-google-maps/api';\nimport Geocode from \"react-geocode\";\nimport styles from \"./styles\";\n\nconst google = window.google;\n\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: \"100%\",\n  height: \"100%\",\n};\n\nconst options = {\n  styles: styles,\n  disableDefaultUI: true,\n  zoomControl: true,\n};\n\nconst label = {\n  text: \"You\",\n}\n\n\n\n\nGeocode.setApiKey(\"\");\nGeocode.enableDebug();\n\nexport default function App () {\n  const { isLoaded, loadError} =  useLoadScript({\n    googleMapsApiKey: \"n\",\n    libraries,\n  }); \n\n\nconst mapRef = React.useRef(); //map ref\nconst onMapLoad = React.useCallback((map) => {\n  mapRef.current = map;\n}, []);  //new map without re-render\n\n\nconst panTo = React.useCallback(({ lat, lng }) => {\n  mapRef.current.panTo({ lat, lng });\n  mapRef.current.setZoom(17);\n}, []);    //map recieves lat and lng of location\n\n\nconst [address, setAddress] = useState(\"\");\nconst [newLocation, setLocation] = useState({\n                              lat : null,\n                              lng: null\n                              });\n\nconst [actualAddress,setactualAddress] = useState(\"\");\n\nconst [positionState, setPositionState] = useState({\n          mapPosition: {\n            lat: 0,\n            lng: 0,\n          },\n          markerPosition: {\n            lat: 0,\n            lng: 0,\n          },\n        });\n\nconst [markers, setMarkers] = useState({\n                              lat: positionState.mapPosition.lat,\n                              lng: positionState.mapPosition.lng\n                              });\n\n                            \n\n const [infoWind, setInfoWind] = useState(null);  \n const [myAddress, setMyAddress] = useState(\"\");     \n const [directions, setDirections] = useState([]);   \n \n\n\n\n\nconst handleSelect = async (value) => {\n        const results = await geocodeByAddress(value);\n        const latLng =  await getLatLng(results[0]);\n        setAddress(value);\n        setactualAddress(results[0].formatted_address);\n        setLocation(latLng);\n        setMarkers({\n             lat: latLng.lat,\n             lng: latLng.lng\n       });\n        panTo({\n              lat: latLng.lat,\n              lng: latLng.lng\n              });      \n          \n}\n\nconst searchOptions = {\n  location: new google.maps.LatLng(positionState.mapPosition.lat, positionState.mapPosition.lng),\n  radius: 20 * 10,\n  // types: ['establishment']\n}\n\n\n\n\nconst origin = { lat: positionState.mapPosition.lat, lng:  positionState.mapPosition.lng };\nconst destination = { lat: newLocation.lat, lng:  newLocation.lng};\n\nconst Directions = () => {\n  const DirectionsService = new google.maps.DirectionsService();\n  \n \n      DirectionsService.route({\n        origin: new google.maps.LatLng(positionState.mapPosition.lat, positionState.mapPosition.lng),\n        destination: new google.maps.LatLng(newLocation.lat, newLocation.lng),\n        travelMode: google.maps.TravelMode.DRIVING,\n        waypoints: [\n          {\n              location: new google.maps.LatLng(positionState.mapPosition.lat, positionState.mapPosition.lng)\n          },\n          {\n              location: new google.maps.LatLng(newLocation.lat, newLocation.lng)\n          }\n      ]\n      }, (result, status) => {\n        if (status === google.maps.DirectionsStatus.OK) {\n          \n          setDirections({\n            directions: result,\n          });\n        } else {\n          console.error(`error fetching directions ${result}`);\n        }\n        \n      });\n\n      \n}\n    \n\nconst Positions = () => {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition((position) => {\n      setPositionState(\n        {\n          mapPosition: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          },\n          markerPosition: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n            \n          },\n        \n        },\n        \n      );\n\n      \n    });\n  } else {\n    console.error(\"Geolocation is not supported by this browser!\");\n  }\n   return (\n     <div className=\"information\">\n       \n     </div>\n   )\n   \n};\n\n\n\n  \nconst information = () => {\n    Geocode.fromLatLng(positionState.mapPosition.lat, positionState.mapPosition.lng)\n    .then(\n     response => {\n         \n         const address = response.results[0].formatted_address;\n         setMyAddress(address);\n         \n     },\n     error => {\n         console.error(error);\n     }\n );\n\n\n}  \n     \n\n\n\n\nif (loadError) return \"Error loading maps\";\nif (!isLoaded) return \"Loading maps\";\n\n\n\n\n\n\n  return <div className=\"container\">\n    <div className=\"left\">\n<h1><div className=\"icon\">< SiEverplaces size=\"1.3em\" /></div>Locator</h1>\n<h2>You can now find places and emergency services close by with <span>Locator</span> in three easy steps</h2>\n<div className=\"steps\">\n  <div className=\"one sections\">\n    <div className=\"icons\">< BiSelectMultiple size=\"1.3em\" /></div>\n    <div className=\"content\">\n      <div className=\"title\">\n        <h3>Find your location address</h3>\n        \n       </div> \n        <div className=\"title-content\">\n        <button onClick={information} className=\"small\"><div className=\"button-icon\">< FaLocationArrow size=\"0.6em\" /></div><div className=\"buttton-text\">Locate me</div></button>\n          <div className=\"info\">You are located at: <i>{myAddress}</i></div>\n        </div>\n     </div>\n  </div>\n\n  <div className=\"two sections\">\n    <div className=\"icons\">< BiSelectMultiple size=\"1.3em\" /></div>\n    <div className=\"content\">\n      <div className=\"title\">\n        <h3>Search for a place nearby using the search bar on the map</h3>\n        <div className=\"small-icon\">< BsBoxArrowUpRight size=\"1.5em\" /></div>\n       </div> \n        <div className=\"title-content\">\n          <div className=\"info\">Search and select</div>\n          \n        </div>\n     </div>\n  </div>\n\n  <div className=\"three sections\">\n    <div className=\"icons\">< BiSelectMultiple size=\"1.3em\" /></div>\n    <div className=\"content\">\n      <div className=\"title\">\n        <h3>Location details are displayed and directions are displayed on the map</h3>\n        \n     </div> \n        <div className=\"class\">\n          <div>View directions on map</div>\n          <button onClick={Directions} className=\"small\"><div className=\"button-icon\">< BiCommentDetail size=\"0.8em\" /></div><div className=\"buttton-text\">Show directions</div></button>\n          <div className=\"info-box\">\n           <div className=\"info\">You are going to: <i>{address}</i></div> \n           <div className=\"info\">located at: <i>{actualAddress}</i></div>\n          </div>\n          \n        </div>\n     </div>\n  </div>\n\n</div>\n<Positions />\n\n\n\n\n    </div>\n    <div className=\"right\">\n\n    <div className=\"search\">\n <PlacesAutocomplete value={address} onChange={setAddress} onSelect={handleSelect} searchOptions={searchOptions}>\n{(\n  { getInputProps, suggestions, getSuggestionItemProps, loading }\n) => (\n  <div>\n  <input {...getInputProps({placeholder: \"Search for nearby places\"})}/>\n  <div>\n    {loading ? <div>...Loading</div> : null}\n    {suggestions.map((suggestion) => {\n      const style = {\n        backgroundColor: suggestion.active ? \"#41b6e6\" : \"#fff\"\n      };\n       return ( \n       <div className=\"search-input\" {...getSuggestionItemProps(suggestion, { style })}>{suggestion.description}</div>\n       );\n    })}\n  </div>\n  </div>)}\n </PlacesAutocomplete>\n     </div>\n\n\n    <GoogleMap\n    mapContainerStyle={mapContainerStyle}\n    zoom={17}\n    center={{ lat: positionState.mapPosition.lat, lng: positionState.mapPosition.lng }}\n    options={options}\n    onLoad={onMapLoad}\n    >\n     \n\n      <Marker label={label} position={origin}/>\n      \n      <Marker onClick={() => {setInfoWind(markers)}} position={destination}/>\n      {infoWind ? (<InfoWindow position={destination} onCloseClick={() => {setInfoWind(null)}}>\n        <div>\n        <h2>Selected location:</h2>\n        <p>{actualAddress}</p>\n        </div>\n      </InfoWindow>) : null}\n      <DirectionsRenderer directions={directions.directions} />\n    </GoogleMap>\n    </div>\n    \n    </div>\n}\n\n\n\n\n\n\n \n\n \n\n\n\n\n\n\n  \n\n\n","export default [\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"weight\": \"2.00\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"geometry.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#9c9c9c\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"labels.text\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#f2f2f2\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape.man_made\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"saturation\": -100\r\n            },\r\n            {\r\n                \"lightness\": 45\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#eeeeee\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#7b7b7b\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"simplified\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"labels.icon\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"transit\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#46bcec\"\r\n            },\r\n            {\r\n                \"visibility\": \"on\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#c8d7d4\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#070707\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    }\r\n]","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}